{"ast":null,"code":"var _jsxFileName = \"/Users/andrewpenny/Desktop/hikers-app/frontend/src/components/HikingFacts.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HikingFacts() {\n  _s();\n  const [parks, setParks] = React.useState({});\n  React.useEffect(() => {\n    //fetch data\n    const dataFetch = async () => {\n      const data = await fetch(\"https://services5.arcgis.com/bPacKTm9cauMXVfn/arcgis/rest/services/TN_State_Parks_Points/FeatureServer/0/query?where=1%3D1&outFields=PARK_NAME,TSP_UID,AM_FIRST_NAME,AM_LAST_NAME,AM_TITLE,AM_PHONE,PM_FIRST_NAME,PM_LAST_NAME,PM_TITLE,PM_PHONE&outSR=4326&f=json\").json();\n\n      // set state when the data received\n      setParks(data);\n    };\n    dataFetch();\n  }, []);\n  let parksArray;\n  if (parks !== []) {\n    // parksArray = parks.features.map(park => {\n    // const parkName = park.attributes['PARK_NAME'];\n    // return <p>{parkName}</p>})\n    /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this);\n    console.log('arrived at the true');\n  } else {\n    parksArray = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 26\n    }, this);\n    console.log('arrived at the else');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"facts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hiking Facts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Hiking is fun\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"There can be initial costs, but it is usually inexpensive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Fresh air and exercise is good for health\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Nature is beautiful\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Parks:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), parksArray]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(HikingFacts, \"Gkb7LoztJfhIN9CsIfLdG87dito=\");\n_c = HikingFacts;\nvar _c;\n$RefreshReg$(_c, \"HikingFacts\");","map":{"version":3,"names":["React","HikingFacts","parks","setParks","useState","useEffect","dataFetch","data","fetch","json","parksArray","console","log"],"sources":["/Users/andrewpenny/Desktop/hikers-app/frontend/src/components/HikingFacts.js"],"sourcesContent":["import React from \"react\";\nimport '../App.css';\n\n\nexport default function HikingFacts() {\n    const [parks, setParks] = React.useState({});\n    \n    React.useEffect(() => {\n        //fetch data\n        const dataFetch = async () => {\n          const data = await (\n            fetch(\n              \"https://services5.arcgis.com/bPacKTm9cauMXVfn/arcgis/rest/services/TN_State_Parks_Points/FeatureServer/0/query?where=1%3D1&outFields=PARK_NAME,TSP_UID,AM_FIRST_NAME,AM_LAST_NAME,AM_TITLE,AM_PHONE,PM_FIRST_NAME,PM_LAST_NAME,PM_TITLE,PM_PHONE&outSR=4326&f=json\"\n            )\n          ).json();\n            \n          // set state when the data received\n          setParks(data)\n        };\n         dataFetch();\n         \n      }, []);\n      let parksArray;\n      if (parks !== []) {\n        // parksArray = parks.features.map(park => {\n        // const parkName = park.attributes['PARK_NAME'];\n        // return <p>{parkName}</p>})\n         <h1>hello</h1>\n         console.log('arrived at the true')\n        } else {\n            parksArray = <h1>hello</h1>\n            console.log('arrived at the else')\n        }\n      \n      \n     \n      \n    return (\n        <div className=\"facts-container\">\n            <h1>Hiking Facts</h1>\n            <ul>\n                <li>Hiking is fun</li>\n                <li>There can be initial costs, but it is usually inexpensive</li>\n                <li>Fresh air and exercise is good for health</li>\n                <li>Nature is beautiful</li>\n            </ul>\n            <p>Parks:</p>\n            {parksArray}\n        </div>\n        \n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC;AAGpB,eAAe,SAASC,WAAW,GAAG;EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5CJ,KAAK,CAACK,SAAS,CAAC,MAAM;IAClB;IACA,MAAMC,SAAS,GAAG,YAAY;MAC5B,MAAMC,IAAI,GAAG,MACXC,KAAK,CACH,oQAAoQ,CACrQ,CACDC,IAAI,EAAE;;MAER;MACAN,QAAQ,CAACI,IAAI,CAAC;IAChB,CAAC;IACAD,SAAS,EAAE;EAEd,CAAC,EAAE,EAAE,CAAC;EACN,IAAII,UAAU;EACd,IAAIR,KAAK,KAAK,EAAE,EAAE;IAChB;IACA;IACA;IACC;MAAA,UAAI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;IACdS,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EACnC,CAAC,MAAM;IACHF,UAAU,gBAAG;MAAA,UAAI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;IAC3BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EACtC;EAKJ,oBACI;IAAK,SAAS,EAAC,iBAAiB;IAAA,wBAC5B;MAAA,UAAI;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,eACrB;MAAA,wBACI;QAAA,UAAI;MAAa;QAAA;QAAA;QAAA;MAAA,QAAK,eACtB;QAAA,UAAI;MAAyD;QAAA;QAAA;QAAA;MAAA,QAAK,eAClE;QAAA,UAAI;MAAyC;QAAA;QAAA;QAAA;MAAA,QAAK,eAClD;QAAA,UAAI;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3B,eACL;MAAA,UAAG;IAAM;MAAA;MAAA;MAAA;IAAA,QAAI,EACZF,UAAU;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAGd;AAAC,GA/CuBT,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}