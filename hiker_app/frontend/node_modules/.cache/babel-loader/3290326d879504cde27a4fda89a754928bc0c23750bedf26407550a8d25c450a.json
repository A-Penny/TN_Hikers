{"ast":null,"code":"var _jsxFileName = \"/Users/andrewpenny/Desktop/hikers-app/frontend/src/components/Schedule.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../App.css';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Schedule() {\n  _s();\n  const [value, onChange] = React.useState(new Date());\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  function onClickDay(value, event) {\n    onChange(value);\n  }\n  let month = months[value.getMonth()];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hike Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: onChange,\n      value: value,\n      calendarType: \"US\",\n      onClickDay: onClickDay,\n      tileContent: _ref => {\n        let {\n          activeStartDate,\n          date,\n          view\n        } = _ref;\n        return view === 'month' && date.getDate() === 19 && date.getMonth() === 2 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Church!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 140\n        }, this) : null;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"What's happening on \", month, \" \", value.getDate(), \"?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-event-date\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"There's nothing happening on this date...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this);\n}\n_s(Schedule, \"DQgK+Tjy3CpWvhZj4nuXkkLAGxU=\");\n_c = Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","Calendar","Schedule","value","onChange","useState","Date","months","onClickDay","event","month","getMonth","activeStartDate","date","view","getDate"],"sources":["/Users/andrewpenny/Desktop/hikers-app/frontend/src/components/Schedule.js"],"sourcesContent":["import React from 'react';\nimport '../App.css';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\n\nexport default function Schedule() {\n    const [value, onChange] = React.useState(new Date());\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    \n    function onClickDay(value, event) {\n        onChange(value);\n         \n    }\n    let month = months[value.getMonth()]\n    \n        return (\n            <div className='schedule-container'>\n                <h1>Hike Calendar</h1>\n                <Calendar \n                    onChange={onChange} \n                    value={value}\n                    calendarType='US'\n                    onClickDay={onClickDay}\n                    tileContent={({ activeStartDate, date, view }) => view === 'month' && date.getDate() === 19 && date.getMonth() === 2 ? <p>Church!</p> : null}\n                    />\n                <p>What's happening on {month} {value.getDate()}?</p>\n                <div className='no-event-date'><h1>There's nothing happening on this date...</h1></div>\n            </div>\n            \n            \n        )\n    }"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AAAC;AAG1C,eAAe,SAASC,QAAQ,GAAG;EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,KAAK,CAACK,QAAQ,CAAC,IAAIC,IAAI,EAAE,CAAC;EACpD,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;EAEzI,SAASC,UAAU,CAACL,KAAK,EAAEM,KAAK,EAAE;IAC9BL,QAAQ,CAACD,KAAK,CAAC;EAEnB;EACA,IAAIO,KAAK,GAAGH,MAAM,CAACJ,KAAK,CAACQ,QAAQ,EAAE,CAAC;EAEhC,oBACI;IAAK,SAAS,EAAC,oBAAoB;IAAA,wBAC/B;MAAA,UAAI;IAAa;MAAA;MAAA;MAAA;IAAA,QAAK,eACtB,QAAC,QAAQ;MACL,QAAQ,EAAEP,QAAS;MACnB,KAAK,EAAED,KAAM;MACb,YAAY,EAAC,IAAI;MACjB,UAAU,EAAEK,UAAW;MACvB,WAAW,EAAE;QAAA,IAAC;UAAEI,eAAe;UAAEC,IAAI;UAAEC;QAAK,CAAC;QAAA,OAAKA,IAAI,KAAK,OAAO,IAAID,IAAI,CAACE,OAAO,EAAE,KAAK,EAAE,IAAIF,IAAI,CAACF,QAAQ,EAAE,KAAK,CAAC,gBAAG;UAAA,UAAG;QAAO;UAAA;UAAA;UAAA;QAAA,QAAI,GAAG,IAAI;MAAA;IAAC;MAAA;MAAA;MAAA;IAAA,QAC3I,eACN;MAAA,WAAG,sBAAoB,EAACD,KAAK,EAAC,GAAC,EAACP,KAAK,CAACY,OAAO,EAAE,EAAC,GAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI,eACrD;MAAK,SAAS,EAAC,eAAe;MAAA,uBAAC;QAAA,UAAI;MAAyC;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACrF;AAId;AAAC,GA1BmBb,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}