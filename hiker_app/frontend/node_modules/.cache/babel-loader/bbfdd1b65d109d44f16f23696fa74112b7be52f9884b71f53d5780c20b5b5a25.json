{"ast":null,"code":"var _jsxFileName = \"/Users/andrewpenny/Desktop/hikers-app/frontend/src/components/Schedule.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../App.css';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Schedule() {\n  _s();\n  const [value, onChange] = React.useState(new Date());\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  let month;\n  function onClickDay(value, event) {\n    onChange(value);\n    month = months[value.getMonth()];\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upcoming Hikes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: onChange,\n      value: value,\n      calendarType: \"US\",\n      onClickDay: onClickDay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: month\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this);\n}\n_s(Schedule, \"DQgK+Tjy3CpWvhZj4nuXkkLAGxU=\");\n_c = Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","Calendar","Schedule","value","onChange","useState","Date","months","month","onClickDay","event","getMonth"],"sources":["/Users/andrewpenny/Desktop/hikers-app/frontend/src/components/Schedule.js"],"sourcesContent":["import React from 'react';\nimport '../App.css';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\n\nexport default function Schedule() {\n    const [value, onChange] = React.useState(new Date());\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    let month;\n    function onClickDay(value, event) {\n        onChange(value);\n        month = months[value.getMonth()] \n    }\n    \n        return (\n            <div className='schedule-container'>\n                <h1>Upcoming Hikes</h1>\n                <Calendar \n                    onChange={onChange} \n                    value={value}\n                    calendarType='US'\n                    onClickDay={onClickDay}\n                    />\n                <p>{month}</p>\n            </div>\n            \n            \n        )\n    }"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AAAC;AAG1C,eAAe,SAASC,QAAQ,GAAG;EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,KAAK,CAACK,QAAQ,CAAC,IAAIC,IAAI,EAAE,CAAC;EACpD,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;EACzI,IAAIC,KAAK;EACT,SAASC,UAAU,CAACN,KAAK,EAAEO,KAAK,EAAE;IAC9BN,QAAQ,CAACD,KAAK,CAAC;IACfK,KAAK,GAAGD,MAAM,CAACJ,KAAK,CAACQ,QAAQ,EAAE,CAAC;EACpC;EAEI,oBACI;IAAK,SAAS,EAAC,oBAAoB;IAAA,wBAC/B;MAAA,UAAI;IAAc;MAAA;MAAA;MAAA;IAAA,QAAK,eACvB,QAAC,QAAQ;MACL,QAAQ,EAAEP,QAAS;MACnB,KAAK,EAAED,KAAM;MACb,YAAY,EAAC,IAAI;MACjB,UAAU,EAAEM;IAAW;MAAA;MAAA;MAAA;IAAA,QACrB,eACN;MAAA,UAAID;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACZ;AAId;AAAC,GAvBmBN,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}